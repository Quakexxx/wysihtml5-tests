* WebKit: Editable elements can also be achieved by setting "-webkit-user-modify: read-write;" via CSS
* IE: The paste event (which is neat for parsing/sanitizing HTML before being inserted into editable elements) requires the user to opt-in in order to allow the javascript to access the clipboardData
* IE: URLs starting with www., http://, https://, ftp://, gopher://, mailto:, new:, snews:, telnet:, wasis:, file://, nntp://, newsrc:, ldap://, ldaps://, outlook:, mic:// and url: will automatically be auto-linked when either the user inserts them via copy&paste or presses the space bar when the caret is directly after such an url. This behavior cannot easily be avoided in IE < 9 since the logic is hardcoded in the mshtml.dll (related blog post on msdn http://blogs.msdn.com/b/ieinternals/archive/2009/09/17/prevent-automatic-hyperlinking-in-contenteditable-html.aspx). Since IE9 it's possible to turn this off by executing document.execCommand("AutoUrlDetect", false, false);
* WebKit: Manually resizing of objects (img, table, ...) isn't supported (see http://code.google.com/p/chromium/issues/detail?id=52800)
* IE: Resizing of objects can be disabled by preventing the default behavior of the proprietary 'onresizestart' event
* Firefox: Resizing of objects can be disabled by invoking the enableObjectResizing command with value 'false'
* IE & Firefox: When the user resizes objects (img, table, ...) in contentEditable both browsers will change/set the width/height inline style properties instead of the width/height attributes. Firefox can be forced to update the attributes by invoking the 'styleWithCSS' command with value 'false' prior to the resize action. In IE you manually need to do this by observing the proprietary 'onresizeend' event and moving the width/height values from the style object to the elements attributes.
* IE: When the editor is running under https:// inserting <img>'s that are not https:// will cause a security warning including a confirmation whether the user wants to display these images. If the user denies, a default image is rendered but the src-attribute still points to the original path.